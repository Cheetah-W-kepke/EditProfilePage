import React, { useState } from 'react';
import '../InputField/InputField.css';

interface PhoneFieldProps {
  value: string;
  onChange: (value: string) => void;
  error?: string;
  label?: string; // –ü–æ–¥–ø–∏—Å—å –∫ –ø–æ–ª—é
}

const PhoneField: React.FC<PhoneFieldProps> = ({ value, onChange, error, label }) => {
  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    let input = e.target.value.replace(/[^\d]/g, ''); // –£–¥–∞–ª—è–µ–º –≤—Å–µ, –∫—Ä–æ–º–µ —Ü–∏—Ñ—Ä
    if (input.length > 0) {
      input = `+${input}`; // –î–æ–±–∞–≤–ª—è–µ–º "+" –≤ –Ω–∞—á–∞–ª–æ
    }

    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –Ω–æ–º–µ—Ä
    if (input.length >= 5) {
      if (input.length <= 12) {
        // –§–æ—Ä–º–∞—Ç: (+X) XXX XXX XX XX
        input = `(+${input.slice(1, 2)}) ${input.slice(2, 5)} ${input.slice(5, 8)} ${input.slice(8, 10)} ${input.slice(10, 12)}`.trim();
      } else {
        // –§–æ—Ä–º–∞—Ç: (+XXX) XXX XXX XXX
        input = `(+${input.slice(1, 4)}) ${input.slice(4, 7)} ${input.slice(7, 10)} ${input.slice(10, 13)}`.trim();
      }
    }

    onChange(input);
  };

  return (
    <div className="phone-field">
      {label && <label className="phone-field-label">{label}</label>}

      <div className="phone-field-container">
        {/* –ò–∫–æ–Ω–∫–∞ —Ç—Ä—É–±–∫–∏ */}
        <span className="phone-field-icon">üìû</span>

        <input
          className={`phone-field-input ${error ? 'phone-field-input-error' : ''}`}
          type="tel"
          value={value}
          onChange={handleChange}
          placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
        />
      </div>

      {error && <span className="phone-field-error">{error}</span>}
    </div>
  );
};

export default PhoneField;
